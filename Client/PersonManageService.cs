//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/Host")]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int AgeField;
        
        private int IdField;
        
        private string NameField;
        
        private string SexField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age
        {
            get
            {
                return this.AgeField;
            }
            set
            {
                this.AgeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sex
        {
            get
            {
                return this.SexField;
            }
            set
            {
                this.SexField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IPersonManageService")]
public interface IPersonManageService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/AddPerson", ReplyAction="http://tempuri.org/IPersonManageService/AddPersonResponse")]
    bool AddPerson(Client.Person info);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/AddPerson", ReplyAction="http://tempuri.org/IPersonManageService/AddPersonResponse")]
    System.Threading.Tasks.Task<bool> AddPersonAsync(Client.Person info);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/DelPerson", ReplyAction="http://tempuri.org/IPersonManageService/DelPersonResponse")]
    bool DelPerson(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/DelPerson", ReplyAction="http://tempuri.org/IPersonManageService/DelPersonResponse")]
    System.Threading.Tasks.Task<bool> DelPersonAsync(int id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonManageService/UpdatePersonResponse")]
    bool UpdatePerson(Client.Person info);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/UpdatePerson", ReplyAction="http://tempuri.org/IPersonManageService/UpdatePersonResponse")]
    System.Threading.Tasks.Task<bool> UpdatePersonAsync(Client.Person info);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/GetAllPerson", ReplyAction="http://tempuri.org/IPersonManageService/GetAllPersonResponse")]
    Client.Person[] GetAllPerson();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonManageService/GetAllPerson", ReplyAction="http://tempuri.org/IPersonManageService/GetAllPersonResponse")]
    System.Threading.Tasks.Task<Client.Person[]> GetAllPersonAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IPersonManageServiceChannel : IPersonManageService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class PersonManageServiceClient : System.ServiceModel.ClientBase<IPersonManageService>, IPersonManageService
{
    
    public PersonManageServiceClient()
    {
    }
    
    public PersonManageServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public PersonManageServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PersonManageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public PersonManageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool AddPerson(Client.Person info)
    {
        return base.Channel.AddPerson(info);
    }
    
    public System.Threading.Tasks.Task<bool> AddPersonAsync(Client.Person info)
    {
        return base.Channel.AddPersonAsync(info);
    }
    
    public bool DelPerson(int id)
    {
        return base.Channel.DelPerson(id);
    }
    
    public System.Threading.Tasks.Task<bool> DelPersonAsync(int id)
    {
        return base.Channel.DelPersonAsync(id);
    }
    
    public bool UpdatePerson(Client.Person info)
    {
        return base.Channel.UpdatePerson(info);
    }
    
    public System.Threading.Tasks.Task<bool> UpdatePersonAsync(Client.Person info)
    {
        return base.Channel.UpdatePersonAsync(info);
    }
    
    public Client.Person[] GetAllPerson()
    {
        return base.Channel.GetAllPerson();
    }
    
    public System.Threading.Tasks.Task<Client.Person[]> GetAllPersonAsync()
    {
        return base.Channel.GetAllPersonAsync();
    }
}
